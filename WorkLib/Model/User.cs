//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkLib.Model
{
    using System.ComponentModel.DataAnnotations;
    using WorkLib.Data;
    using WorkLib.Repository;


    /// <summary>User type.</summary>
    public partial class User : Entity<User>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="User"/> class.
        /// </summary>
        public User()
        { }
        /// <summary>
        /// Initializes a new instance of the <see cref="User"/> class.
        /// </summary>
        /// <param name="data">The data reader or data row.</param>
        public User(object data) : base(data)
        { }

        /// <summary>Gets or sets the user identifier.</summary>
        /// <value>The user identifier.</value>
        [Key]
        [Display(Name = "Id")]
        public int UserId { get; set; }
        /// <summary>Gets or sets the name of the user.</summary>
        /// <value>The name of the user.</value>
        [Required(ErrorMessage = "User namne is required.")]
        [Display(Name = "User name")]
        public string UserName { get; set; }
        /// <summary>Gets or sets the password.</summary>
        /// <value>The password.</value>
        public string Password { get; set; }
        /// <summary>Gets or sets the first name.</summary>
        /// <value>The first name.</value>
        [Display(Name = "First name")]
        public string FirstName { get; set; }
        /// <summary>Gets or sets the last name.</summary>
        /// <value>The last name.</value>
        [Display(Name = "Last name")]
        public string LastName { get; set; }
        /// <summary>
        /// Gets the full name.
        /// </summary>
        /// <value>
        /// The full name.
        /// </value>
        [Display(Name = "Full name")]
        [Editable(false)]
        public string FullName
        {
            get
            {
                var fullName = $"{(FirstName ?? "")} {(LastName ?? "")}";
                if (fullName.Length > 1) // moore then one space separator
                    return fullName;
                return UserName;
            }
        }
        /// <summary>Gets or sets the email.</summary>
        /// <value>The email.</value>
        public string Email { get; set; }
        /// <summary>Gets or sets the phone.</summary>
        /// <value>The phone.</value>
        public string Phone { get; set; }
        /// <summary>Gets or sets the user group identifier.</summary>
        /// <value>The user group identifier.</value>
        public int UserGroupId { get; set; }
        /// <summary>
        /// Gets the type of the group.
        /// </summary>
        /// <value>
        /// The type of the group.
        /// </value>
        public GroupType GroupType => UserGroupId == 0 
            ? GroupType.Administrators 
            : GroupType.Users;

        /// <summary>
        /// Gets or sets the image.
        /// </summary>
        /// <value>
        /// The image.
        /// </value>
        public byte[] Image { get; set; }

        private UserProject[] _userProjects;
        /// <summary>
        /// Gets or sets the user projects.
        /// </summary>
        /// <value>
        /// The projects.
        /// </value>
        public UserProject[] UserProjects
        {
            get
            {
                if (_userProjects == null || _userProjects.Length == 0)
                    _userProjects = WorkRepository.GetUserProjects(UserId);
                return _userProjects;
            }
            set
            {
                _userProjects = value;
            }
        }

        /// <summary>
        /// Deletes the current object.
        /// </summary>
        /// <param name="context">The data context.</param>
        /// <exception cref="System.NotImplementedException"></exception>
        public override void Delete(DbContext context = null)
        {
            WorkRepository.DeleteUser(this, context);
        }

        /// <summary>
        /// Saves current object to data.
        /// </summary>
        /// <param name="context">The data context.</param>
        /// <exception cref="System.NotImplementedException"></exception>
        public override int Save(DbContext context = null)
        {
            return WorkRepository.SaveUser(this, context).UserId;
        }

        /// <summary>
        /// Converts to string.
        /// </summary>
        /// <returns>
        /// A <see cref="System.String" /> that represents this instance.
        /// </returns>
        public override string ToString()
        {
            return FullName;
        }
        /// <summary>
        /// Changes the password.
        /// </summary>
        /// <param name="userId">The user identifier.</param>
        /// <param name="password">The password.</param>
        /// <param name="context">The data context.</param>
        public void ChangePassword(int userId, string password, DbContext context = null)
        {
            WorkRepository.ChangePassword(userId, password, context);
        }
    }
}
